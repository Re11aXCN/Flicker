// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: FKPasswordGrpc.proto
// Protobuf C++ Version: 5.29.3

#include "FKPasswordGrpc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace FKPasswordGrpc {

inline constexpr EncryptPasswordResponseBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encrypted_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        salt_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_code_{0},
        request_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncryptPasswordResponseBody::EncryptPasswordResponseBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncryptPasswordResponseBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncryptPasswordResponseBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncryptPasswordResponseBodyDefaultTypeInternal() {}
  union {
    EncryptPasswordResponseBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncryptPasswordResponseBodyDefaultTypeInternal _EncryptPasswordResponseBody_default_instance_;

inline constexpr EncryptPasswordRequestBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hashed_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncryptPasswordRequestBody::EncryptPasswordRequestBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncryptPasswordRequestBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncryptPasswordRequestBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncryptPasswordRequestBodyDefaultTypeInternal() {}
  union {
    EncryptPasswordRequestBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncryptPasswordRequestBodyDefaultTypeInternal _EncryptPasswordRequestBody_default_instance_;

inline constexpr AuthenticatePasswordResponseBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_code_{0},
        request_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuthenticatePasswordResponseBody::AuthenticatePasswordResponseBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthenticatePasswordResponseBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticatePasswordResponseBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticatePasswordResponseBodyDefaultTypeInternal() {}
  union {
    AuthenticatePasswordResponseBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticatePasswordResponseBodyDefaultTypeInternal _AuthenticatePasswordResponseBody_default_instance_;

inline constexpr AuthenticatePasswordRequestBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hashed_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encrypted_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuthenticatePasswordRequestBody::AuthenticatePasswordRequestBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthenticatePasswordRequestBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticatePasswordRequestBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticatePasswordRequestBodyDefaultTypeInternal() {}
  union {
    AuthenticatePasswordRequestBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticatePasswordRequestBodyDefaultTypeInternal _AuthenticatePasswordRequestBody_default_instance_;
}  // namespace FKPasswordGrpc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_FKPasswordGrpc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_FKPasswordGrpc_2eproto = nullptr;
const ::uint32_t
    TableStruct_FKPasswordGrpc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordRequestBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordRequestBody, _impl_.request_type_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordRequestBody, _impl_.hashed_password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordResponseBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordResponseBody, _impl_.status_code_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordResponseBody, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordResponseBody, _impl_.request_type_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordResponseBody, _impl_.encrypted_password_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::EncryptPasswordResponseBody, _impl_.salt_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::AuthenticatePasswordRequestBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::AuthenticatePasswordRequestBody, _impl_.request_type_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::AuthenticatePasswordRequestBody, _impl_.hashed_password_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::AuthenticatePasswordRequestBody, _impl_.encrypted_password_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::AuthenticatePasswordResponseBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::AuthenticatePasswordResponseBody, _impl_.status_code_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::AuthenticatePasswordResponseBody, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::FKPasswordGrpc::AuthenticatePasswordResponseBody, _impl_.request_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::FKPasswordGrpc::EncryptPasswordRequestBody)},
        {10, -1, -1, sizeof(::FKPasswordGrpc::EncryptPasswordResponseBody)},
        {23, -1, -1, sizeof(::FKPasswordGrpc::AuthenticatePasswordRequestBody)},
        {34, -1, -1, sizeof(::FKPasswordGrpc::AuthenticatePasswordResponseBody)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::FKPasswordGrpc::_EncryptPasswordRequestBody_default_instance_._instance,
    &::FKPasswordGrpc::_EncryptPasswordResponseBody_default_instance_._instance,
    &::FKPasswordGrpc::_AuthenticatePasswordRequestBody_default_instance_._instance,
    &::FKPasswordGrpc::_AuthenticatePasswordResponseBody_default_instance_._instance,
};
const char descriptor_table_protodef_FKPasswordGrpc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024FKPasswordGrpc.proto\022\016FKPasswordGrpc\"K"
    "\n\032EncryptPasswordRequestBody\022\024\n\014request_"
    "type\030\001 \001(\005\022\027\n\017hashed_password\030\002 \001(\t\"\203\001\n\033"
    "EncryptPasswordResponseBody\022\023\n\013status_co"
    "de\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\024\n\014request_typ"
    "e\030\003 \001(\005\022\032\n\022encrypted_password\030\004 \001(\t\022\014\n\004s"
    "alt\030\005 \001(\t\"l\n\037AuthenticatePasswordRequest"
    "Body\022\024\n\014request_type\030\001 \001(\005\022\027\n\017hashed_pas"
    "sword\030\002 \001(\t\022\032\n\022encrypted_password\030\003 \001(\t\""
    "^\n AuthenticatePasswordResponseBody\022\023\n\013s"
    "tatus_code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\024\n\014req"
    "uest_type\030\003 \001(\0052\374\001\n\017PasswordService\022l\n\017E"
    "ncryptPassword\022*.FKPasswordGrpc.EncryptP"
    "asswordRequestBody\032+.FKPasswordGrpc.Encr"
    "yptPasswordResponseBody\"\000\022{\n\024Authenticat"
    "ePassword\022/.FKPasswordGrpc.AuthenticateP"
    "asswordRequestBody\0320.FKPasswordGrpc.Auth"
    "enticatePasswordResponseBody\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_FKPasswordGrpc_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_FKPasswordGrpc_2eproto = {
    false,
    false,
    718,
    descriptor_table_protodef_FKPasswordGrpc_2eproto,
    "FKPasswordGrpc.proto",
    &descriptor_table_FKPasswordGrpc_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_FKPasswordGrpc_2eproto::offsets,
    file_level_enum_descriptors_FKPasswordGrpc_2eproto,
    file_level_service_descriptors_FKPasswordGrpc_2eproto,
};
namespace FKPasswordGrpc {
// ===================================================================

class EncryptPasswordRequestBody::_Internal {
 public:
};

EncryptPasswordRequestBody::EncryptPasswordRequestBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FKPasswordGrpc.EncryptPasswordRequestBody)
}
inline PROTOBUF_NDEBUG_INLINE EncryptPasswordRequestBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::FKPasswordGrpc::EncryptPasswordRequestBody& from_msg)
      : hashed_password_(arena, from.hashed_password_),
        _cached_size_{0} {}

EncryptPasswordRequestBody::EncryptPasswordRequestBody(
    ::google::protobuf::Arena* arena,
    const EncryptPasswordRequestBody& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncryptPasswordRequestBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.request_type_ = from._impl_.request_type_;

  // @@protoc_insertion_point(copy_constructor:FKPasswordGrpc.EncryptPasswordRequestBody)
}
inline PROTOBUF_NDEBUG_INLINE EncryptPasswordRequestBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hashed_password_(arena),
        _cached_size_{0} {}

inline void EncryptPasswordRequestBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.request_type_ = {};
}
EncryptPasswordRequestBody::~EncryptPasswordRequestBody() {
  // @@protoc_insertion_point(destructor:FKPasswordGrpc.EncryptPasswordRequestBody)
  SharedDtor(*this);
}
inline void EncryptPasswordRequestBody::SharedDtor(MessageLite& self) {
  EncryptPasswordRequestBody& this_ = static_cast<EncryptPasswordRequestBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hashed_password_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EncryptPasswordRequestBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EncryptPasswordRequestBody(arena);
}
constexpr auto EncryptPasswordRequestBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncryptPasswordRequestBody),
                                            alignof(EncryptPasswordRequestBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EncryptPasswordRequestBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EncryptPasswordRequestBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EncryptPasswordRequestBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EncryptPasswordRequestBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EncryptPasswordRequestBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EncryptPasswordRequestBody>(), &EncryptPasswordRequestBody::ByteSizeLong,
            &EncryptPasswordRequestBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EncryptPasswordRequestBody, _impl_._cached_size_),
        false,
    },
    &EncryptPasswordRequestBody::kDescriptorMethods,
    &descriptor_table_FKPasswordGrpc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EncryptPasswordRequestBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> EncryptPasswordRequestBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::FKPasswordGrpc::EncryptPasswordRequestBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string hashed_password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EncryptPasswordRequestBody, _impl_.hashed_password_)}},
    // int32 request_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncryptPasswordRequestBody, _impl_.request_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EncryptPasswordRequestBody, _impl_.request_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 request_type = 1;
    {PROTOBUF_FIELD_OFFSET(EncryptPasswordRequestBody, _impl_.request_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string hashed_password = 2;
    {PROTOBUF_FIELD_OFFSET(EncryptPasswordRequestBody, _impl_.hashed_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\0\17\0\0\0\0\0"
    "FKPasswordGrpc.EncryptPasswordRequestBody"
    "hashed_password"
  }},
};

PROTOBUF_NOINLINE void EncryptPasswordRequestBody::Clear() {
// @@protoc_insertion_point(message_clear_start:FKPasswordGrpc.EncryptPasswordRequestBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashed_password_.ClearToEmpty();
  _impl_.request_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EncryptPasswordRequestBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EncryptPasswordRequestBody& this_ = static_cast<const EncryptPasswordRequestBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EncryptPasswordRequestBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EncryptPasswordRequestBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:FKPasswordGrpc.EncryptPasswordRequestBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 request_type = 1;
          if (this_._internal_request_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_request_type(), target);
          }

          // string hashed_password = 2;
          if (!this_._internal_hashed_password().empty()) {
            const std::string& _s = this_._internal_hashed_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FKPasswordGrpc.EncryptPasswordRequestBody.hashed_password");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:FKPasswordGrpc.EncryptPasswordRequestBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EncryptPasswordRequestBody::ByteSizeLong(const MessageLite& base) {
          const EncryptPasswordRequestBody& this_ = static_cast<const EncryptPasswordRequestBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EncryptPasswordRequestBody::ByteSizeLong() const {
          const EncryptPasswordRequestBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:FKPasswordGrpc.EncryptPasswordRequestBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string hashed_password = 2;
            if (!this_._internal_hashed_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hashed_password());
            }
            // int32 request_type = 1;
            if (this_._internal_request_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_request_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EncryptPasswordRequestBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncryptPasswordRequestBody*>(&to_msg);
  auto& from = static_cast<const EncryptPasswordRequestBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FKPasswordGrpc.EncryptPasswordRequestBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hashed_password().empty()) {
    _this->_internal_set_hashed_password(from._internal_hashed_password());
  }
  if (from._internal_request_type() != 0) {
    _this->_impl_.request_type_ = from._impl_.request_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncryptPasswordRequestBody::CopyFrom(const EncryptPasswordRequestBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FKPasswordGrpc.EncryptPasswordRequestBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncryptPasswordRequestBody::InternalSwap(EncryptPasswordRequestBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hashed_password_, &other->_impl_.hashed_password_, arena);
        swap(_impl_.request_type_, other->_impl_.request_type_);
}

::google::protobuf::Metadata EncryptPasswordRequestBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncryptPasswordResponseBody::_Internal {
 public:
};

EncryptPasswordResponseBody::EncryptPasswordResponseBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FKPasswordGrpc.EncryptPasswordResponseBody)
}
inline PROTOBUF_NDEBUG_INLINE EncryptPasswordResponseBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::FKPasswordGrpc::EncryptPasswordResponseBody& from_msg)
      : message_(arena, from.message_),
        encrypted_password_(arena, from.encrypted_password_),
        salt_(arena, from.salt_),
        _cached_size_{0} {}

EncryptPasswordResponseBody::EncryptPasswordResponseBody(
    ::google::protobuf::Arena* arena,
    const EncryptPasswordResponseBody& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncryptPasswordResponseBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_code_),
           offsetof(Impl_, request_type_) -
               offsetof(Impl_, status_code_) +
               sizeof(Impl_::request_type_));

  // @@protoc_insertion_point(copy_constructor:FKPasswordGrpc.EncryptPasswordResponseBody)
}
inline PROTOBUF_NDEBUG_INLINE EncryptPasswordResponseBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        encrypted_password_(arena),
        salt_(arena),
        _cached_size_{0} {}

inline void EncryptPasswordResponseBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_code_),
           0,
           offsetof(Impl_, request_type_) -
               offsetof(Impl_, status_code_) +
               sizeof(Impl_::request_type_));
}
EncryptPasswordResponseBody::~EncryptPasswordResponseBody() {
  // @@protoc_insertion_point(destructor:FKPasswordGrpc.EncryptPasswordResponseBody)
  SharedDtor(*this);
}
inline void EncryptPasswordResponseBody::SharedDtor(MessageLite& self) {
  EncryptPasswordResponseBody& this_ = static_cast<EncryptPasswordResponseBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.encrypted_password_.Destroy();
  this_._impl_.salt_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EncryptPasswordResponseBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EncryptPasswordResponseBody(arena);
}
constexpr auto EncryptPasswordResponseBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncryptPasswordResponseBody),
                                            alignof(EncryptPasswordResponseBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EncryptPasswordResponseBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EncryptPasswordResponseBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EncryptPasswordResponseBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EncryptPasswordResponseBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EncryptPasswordResponseBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EncryptPasswordResponseBody>(), &EncryptPasswordResponseBody::ByteSizeLong,
            &EncryptPasswordResponseBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_._cached_size_),
        false,
    },
    &EncryptPasswordResponseBody::kDescriptorMethods,
    &descriptor_table_FKPasswordGrpc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EncryptPasswordResponseBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 80, 2> EncryptPasswordResponseBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::FKPasswordGrpc::EncryptPasswordResponseBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 status_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncryptPasswordResponseBody, _impl_.status_code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.status_code_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.message_)}},
    // int32 request_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncryptPasswordResponseBody, _impl_.request_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.request_type_)}},
    // string encrypted_password = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.encrypted_password_)}},
    // string salt = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.salt_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 status_code = 1;
    {PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.status_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 request_type = 3;
    {PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.request_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string encrypted_password = 4;
    {PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.encrypted_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string salt = 5;
    {PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.salt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\0\7\0\22\4\0\0"
    "FKPasswordGrpc.EncryptPasswordResponseBody"
    "message"
    "encrypted_password"
    "salt"
  }},
};

PROTOBUF_NOINLINE void EncryptPasswordResponseBody::Clear() {
// @@protoc_insertion_point(message_clear_start:FKPasswordGrpc.EncryptPasswordResponseBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.encrypted_password_.ClearToEmpty();
  _impl_.salt_.ClearToEmpty();
  ::memset(&_impl_.status_code_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.request_type_) -
      reinterpret_cast<char*>(&_impl_.status_code_)) + sizeof(_impl_.request_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EncryptPasswordResponseBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EncryptPasswordResponseBody& this_ = static_cast<const EncryptPasswordResponseBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EncryptPasswordResponseBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EncryptPasswordResponseBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:FKPasswordGrpc.EncryptPasswordResponseBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 status_code = 1;
          if (this_._internal_status_code() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_status_code(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FKPasswordGrpc.EncryptPasswordResponseBody.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 request_type = 3;
          if (this_._internal_request_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_request_type(), target);
          }

          // string encrypted_password = 4;
          if (!this_._internal_encrypted_password().empty()) {
            const std::string& _s = this_._internal_encrypted_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FKPasswordGrpc.EncryptPasswordResponseBody.encrypted_password");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string salt = 5;
          if (!this_._internal_salt().empty()) {
            const std::string& _s = this_._internal_salt();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FKPasswordGrpc.EncryptPasswordResponseBody.salt");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:FKPasswordGrpc.EncryptPasswordResponseBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EncryptPasswordResponseBody::ByteSizeLong(const MessageLite& base) {
          const EncryptPasswordResponseBody& this_ = static_cast<const EncryptPasswordResponseBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EncryptPasswordResponseBody::ByteSizeLong() const {
          const EncryptPasswordResponseBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:FKPasswordGrpc.EncryptPasswordResponseBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string encrypted_password = 4;
            if (!this_._internal_encrypted_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_encrypted_password());
            }
            // string salt = 5;
            if (!this_._internal_salt().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_salt());
            }
            // int32 status_code = 1;
            if (this_._internal_status_code() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_status_code());
            }
            // int32 request_type = 3;
            if (this_._internal_request_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_request_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EncryptPasswordResponseBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncryptPasswordResponseBody*>(&to_msg);
  auto& from = static_cast<const EncryptPasswordResponseBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FKPasswordGrpc.EncryptPasswordResponseBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_encrypted_password().empty()) {
    _this->_internal_set_encrypted_password(from._internal_encrypted_password());
  }
  if (!from._internal_salt().empty()) {
    _this->_internal_set_salt(from._internal_salt());
  }
  if (from._internal_status_code() != 0) {
    _this->_impl_.status_code_ = from._impl_.status_code_;
  }
  if (from._internal_request_type() != 0) {
    _this->_impl_.request_type_ = from._impl_.request_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncryptPasswordResponseBody::CopyFrom(const EncryptPasswordResponseBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FKPasswordGrpc.EncryptPasswordResponseBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncryptPasswordResponseBody::InternalSwap(EncryptPasswordResponseBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encrypted_password_, &other->_impl_.encrypted_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.salt_, &other->_impl_.salt_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.request_type_)
      + sizeof(EncryptPasswordResponseBody::_impl_.request_type_)
      - PROTOBUF_FIELD_OFFSET(EncryptPasswordResponseBody, _impl_.status_code_)>(
          reinterpret_cast<char*>(&_impl_.status_code_),
          reinterpret_cast<char*>(&other->_impl_.status_code_));
}

::google::protobuf::Metadata EncryptPasswordResponseBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AuthenticatePasswordRequestBody::_Internal {
 public:
};

AuthenticatePasswordRequestBody::AuthenticatePasswordRequestBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FKPasswordGrpc.AuthenticatePasswordRequestBody)
}
inline PROTOBUF_NDEBUG_INLINE AuthenticatePasswordRequestBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::FKPasswordGrpc::AuthenticatePasswordRequestBody& from_msg)
      : hashed_password_(arena, from.hashed_password_),
        encrypted_password_(arena, from.encrypted_password_),
        _cached_size_{0} {}

AuthenticatePasswordRequestBody::AuthenticatePasswordRequestBody(
    ::google::protobuf::Arena* arena,
    const AuthenticatePasswordRequestBody& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuthenticatePasswordRequestBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.request_type_ = from._impl_.request_type_;

  // @@protoc_insertion_point(copy_constructor:FKPasswordGrpc.AuthenticatePasswordRequestBody)
}
inline PROTOBUF_NDEBUG_INLINE AuthenticatePasswordRequestBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hashed_password_(arena),
        encrypted_password_(arena),
        _cached_size_{0} {}

inline void AuthenticatePasswordRequestBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.request_type_ = {};
}
AuthenticatePasswordRequestBody::~AuthenticatePasswordRequestBody() {
  // @@protoc_insertion_point(destructor:FKPasswordGrpc.AuthenticatePasswordRequestBody)
  SharedDtor(*this);
}
inline void AuthenticatePasswordRequestBody::SharedDtor(MessageLite& self) {
  AuthenticatePasswordRequestBody& this_ = static_cast<AuthenticatePasswordRequestBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hashed_password_.Destroy();
  this_._impl_.encrypted_password_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AuthenticatePasswordRequestBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuthenticatePasswordRequestBody(arena);
}
constexpr auto AuthenticatePasswordRequestBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AuthenticatePasswordRequestBody),
                                            alignof(AuthenticatePasswordRequestBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuthenticatePasswordRequestBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuthenticatePasswordRequestBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuthenticatePasswordRequestBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuthenticatePasswordRequestBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuthenticatePasswordRequestBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuthenticatePasswordRequestBody>(), &AuthenticatePasswordRequestBody::ByteSizeLong,
            &AuthenticatePasswordRequestBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuthenticatePasswordRequestBody, _impl_._cached_size_),
        false,
    },
    &AuthenticatePasswordRequestBody::kDescriptorMethods,
    &descriptor_table_FKPasswordGrpc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuthenticatePasswordRequestBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 88, 2> AuthenticatePasswordRequestBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::FKPasswordGrpc::AuthenticatePasswordRequestBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 request_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthenticatePasswordRequestBody, _impl_.request_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AuthenticatePasswordRequestBody, _impl_.request_type_)}},
    // string hashed_password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuthenticatePasswordRequestBody, _impl_.hashed_password_)}},
    // string encrypted_password = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AuthenticatePasswordRequestBody, _impl_.encrypted_password_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 request_type = 1;
    {PROTOBUF_FIELD_OFFSET(AuthenticatePasswordRequestBody, _impl_.request_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string hashed_password = 2;
    {PROTOBUF_FIELD_OFFSET(AuthenticatePasswordRequestBody, _impl_.hashed_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string encrypted_password = 3;
    {PROTOBUF_FIELD_OFFSET(AuthenticatePasswordRequestBody, _impl_.encrypted_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\0\17\22\0\0\0\0"
    "FKPasswordGrpc.AuthenticatePasswordRequestBody"
    "hashed_password"
    "encrypted_password"
  }},
};

PROTOBUF_NOINLINE void AuthenticatePasswordRequestBody::Clear() {
// @@protoc_insertion_point(message_clear_start:FKPasswordGrpc.AuthenticatePasswordRequestBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashed_password_.ClearToEmpty();
  _impl_.encrypted_password_.ClearToEmpty();
  _impl_.request_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuthenticatePasswordRequestBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuthenticatePasswordRequestBody& this_ = static_cast<const AuthenticatePasswordRequestBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuthenticatePasswordRequestBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuthenticatePasswordRequestBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:FKPasswordGrpc.AuthenticatePasswordRequestBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 request_type = 1;
          if (this_._internal_request_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_request_type(), target);
          }

          // string hashed_password = 2;
          if (!this_._internal_hashed_password().empty()) {
            const std::string& _s = this_._internal_hashed_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FKPasswordGrpc.AuthenticatePasswordRequestBody.hashed_password");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string encrypted_password = 3;
          if (!this_._internal_encrypted_password().empty()) {
            const std::string& _s = this_._internal_encrypted_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FKPasswordGrpc.AuthenticatePasswordRequestBody.encrypted_password");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:FKPasswordGrpc.AuthenticatePasswordRequestBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuthenticatePasswordRequestBody::ByteSizeLong(const MessageLite& base) {
          const AuthenticatePasswordRequestBody& this_ = static_cast<const AuthenticatePasswordRequestBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuthenticatePasswordRequestBody::ByteSizeLong() const {
          const AuthenticatePasswordRequestBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:FKPasswordGrpc.AuthenticatePasswordRequestBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string hashed_password = 2;
            if (!this_._internal_hashed_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hashed_password());
            }
            // string encrypted_password = 3;
            if (!this_._internal_encrypted_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_encrypted_password());
            }
            // int32 request_type = 1;
            if (this_._internal_request_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_request_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuthenticatePasswordRequestBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuthenticatePasswordRequestBody*>(&to_msg);
  auto& from = static_cast<const AuthenticatePasswordRequestBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FKPasswordGrpc.AuthenticatePasswordRequestBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hashed_password().empty()) {
    _this->_internal_set_hashed_password(from._internal_hashed_password());
  }
  if (!from._internal_encrypted_password().empty()) {
    _this->_internal_set_encrypted_password(from._internal_encrypted_password());
  }
  if (from._internal_request_type() != 0) {
    _this->_impl_.request_type_ = from._impl_.request_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticatePasswordRequestBody::CopyFrom(const AuthenticatePasswordRequestBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FKPasswordGrpc.AuthenticatePasswordRequestBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthenticatePasswordRequestBody::InternalSwap(AuthenticatePasswordRequestBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hashed_password_, &other->_impl_.hashed_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encrypted_password_, &other->_impl_.encrypted_password_, arena);
        swap(_impl_.request_type_, other->_impl_.request_type_);
}

::google::protobuf::Metadata AuthenticatePasswordRequestBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AuthenticatePasswordResponseBody::_Internal {
 public:
};

AuthenticatePasswordResponseBody::AuthenticatePasswordResponseBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FKPasswordGrpc.AuthenticatePasswordResponseBody)
}
inline PROTOBUF_NDEBUG_INLINE AuthenticatePasswordResponseBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::FKPasswordGrpc::AuthenticatePasswordResponseBody& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

AuthenticatePasswordResponseBody::AuthenticatePasswordResponseBody(
    ::google::protobuf::Arena* arena,
    const AuthenticatePasswordResponseBody& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuthenticatePasswordResponseBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_code_),
           offsetof(Impl_, request_type_) -
               offsetof(Impl_, status_code_) +
               sizeof(Impl_::request_type_));

  // @@protoc_insertion_point(copy_constructor:FKPasswordGrpc.AuthenticatePasswordResponseBody)
}
inline PROTOBUF_NDEBUG_INLINE AuthenticatePasswordResponseBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void AuthenticatePasswordResponseBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_code_),
           0,
           offsetof(Impl_, request_type_) -
               offsetof(Impl_, status_code_) +
               sizeof(Impl_::request_type_));
}
AuthenticatePasswordResponseBody::~AuthenticatePasswordResponseBody() {
  // @@protoc_insertion_point(destructor:FKPasswordGrpc.AuthenticatePasswordResponseBody)
  SharedDtor(*this);
}
inline void AuthenticatePasswordResponseBody::SharedDtor(MessageLite& self) {
  AuthenticatePasswordResponseBody& this_ = static_cast<AuthenticatePasswordResponseBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AuthenticatePasswordResponseBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuthenticatePasswordResponseBody(arena);
}
constexpr auto AuthenticatePasswordResponseBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AuthenticatePasswordResponseBody),
                                            alignof(AuthenticatePasswordResponseBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuthenticatePasswordResponseBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuthenticatePasswordResponseBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuthenticatePasswordResponseBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuthenticatePasswordResponseBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuthenticatePasswordResponseBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuthenticatePasswordResponseBody>(), &AuthenticatePasswordResponseBody::ByteSizeLong,
            &AuthenticatePasswordResponseBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_._cached_size_),
        false,
    },
    &AuthenticatePasswordResponseBody::kDescriptorMethods,
    &descriptor_table_FKPasswordGrpc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuthenticatePasswordResponseBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> AuthenticatePasswordResponseBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::FKPasswordGrpc::AuthenticatePasswordResponseBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 status_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthenticatePasswordResponseBody, _impl_.status_code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_.status_code_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_.message_)}},
    // int32 request_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthenticatePasswordResponseBody, _impl_.request_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_.request_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 status_code = 1;
    {PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_.status_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 request_type = 3;
    {PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_.request_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\57\0\7\0\0\0\0\0"
    "FKPasswordGrpc.AuthenticatePasswordResponseBody"
    "message"
  }},
};

PROTOBUF_NOINLINE void AuthenticatePasswordResponseBody::Clear() {
// @@protoc_insertion_point(message_clear_start:FKPasswordGrpc.AuthenticatePasswordResponseBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.status_code_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.request_type_) -
      reinterpret_cast<char*>(&_impl_.status_code_)) + sizeof(_impl_.request_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuthenticatePasswordResponseBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuthenticatePasswordResponseBody& this_ = static_cast<const AuthenticatePasswordResponseBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuthenticatePasswordResponseBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuthenticatePasswordResponseBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:FKPasswordGrpc.AuthenticatePasswordResponseBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 status_code = 1;
          if (this_._internal_status_code() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_status_code(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FKPasswordGrpc.AuthenticatePasswordResponseBody.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 request_type = 3;
          if (this_._internal_request_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_request_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:FKPasswordGrpc.AuthenticatePasswordResponseBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuthenticatePasswordResponseBody::ByteSizeLong(const MessageLite& base) {
          const AuthenticatePasswordResponseBody& this_ = static_cast<const AuthenticatePasswordResponseBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuthenticatePasswordResponseBody::ByteSizeLong() const {
          const AuthenticatePasswordResponseBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:FKPasswordGrpc.AuthenticatePasswordResponseBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // int32 status_code = 1;
            if (this_._internal_status_code() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_status_code());
            }
            // int32 request_type = 3;
            if (this_._internal_request_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_request_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuthenticatePasswordResponseBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuthenticatePasswordResponseBody*>(&to_msg);
  auto& from = static_cast<const AuthenticatePasswordResponseBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FKPasswordGrpc.AuthenticatePasswordResponseBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status_code() != 0) {
    _this->_impl_.status_code_ = from._impl_.status_code_;
  }
  if (from._internal_request_type() != 0) {
    _this->_impl_.request_type_ = from._impl_.request_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticatePasswordResponseBody::CopyFrom(const AuthenticatePasswordResponseBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FKPasswordGrpc.AuthenticatePasswordResponseBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthenticatePasswordResponseBody::InternalSwap(AuthenticatePasswordResponseBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_.request_type_)
      + sizeof(AuthenticatePasswordResponseBody::_impl_.request_type_)
      - PROTOBUF_FIELD_OFFSET(AuthenticatePasswordResponseBody, _impl_.status_code_)>(
          reinterpret_cast<char*>(&_impl_.status_code_),
          reinterpret_cast<char*>(&other->_impl_.status_code_));
}

::google::protobuf::Metadata AuthenticatePasswordResponseBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace FKPasswordGrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_FKPasswordGrpc_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
