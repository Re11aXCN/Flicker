syntax = "proto3";

package GrpcService;

service Verification {
	rpc GetVerifyCode (VerifyCodeRequestBody) returns (VerifyCodeResponseBody) {}
}

service Encryption {
	rpc EncryptPassword (EncryptPasswordRequestBody) returns (EncryptPasswordResponseBody) {}
}

service Authentication {
    rpc AuthenticatePwdReset (AuthenticatePwdResetRequestBody) returns (AuthenticatePwdResetResponseBody) {}
}

service Interaction {
    //rpc SendLoginMessage (SendLoginMessageRequestBody) returns (SendLoginMessageResponseBody) {}
    rpc GetChatServerAddress (GetChatServerAddressRequestBody) returns (GetChatServerAddressResponseBody) {}
}


// Verification
message VerifyCodeRequestBody {
	int32 rpc_request_type = 1;  //不是赋值，而是指定唯一编号
	// data
	string email = 2;
}

message VerifyCodeResponseBody {
	int32 rpc_response_code = 1;
	string message = 2;
	// data
	string verify_code = 3;
}

// Encryption
message EncryptPasswordRequestBody {
    int32 rpc_request_type = 1;
    string hashed_password = 2;
}

message EncryptPasswordResponseBody {
    int32 rpc_response_code = 1;
    string message = 2;
    string encrypted_password = 3;
}

// Authentication
message AuthenticatePwdResetRequestBody {
	int32 rpc_request_type = 1;
    string hashed_password = 2;
    string encrypted_password = 3;
}

message AuthenticatePwdResetResponseBody {
    int32 rpc_response_code = 1;
    string message = 2;
    bool is_authenticated = 3;
}

// Interaction
//message SendLoginMessageRequestBody {
//    int32 rpc_request_type = 1;
//    string uuid = 2;
//}
//
//message SendLoginMessageResponseBody {
//    int32 rpc_response_code = 1;
//    string message = 2;
//    string host_address = 3;
//    int32 port = 4;
//    string token = 5;
//}

message GetChatServerAddressRequestBody {
    int32 rpc_request_type = 1;
    string uuid = 2;
}

message GetChatServerAddressResponseBody {
    int32 rpc_response_code = 1;
    string message = 2;
    string host_address = 3;
    int32 port = 4;
    string token = 5;
}